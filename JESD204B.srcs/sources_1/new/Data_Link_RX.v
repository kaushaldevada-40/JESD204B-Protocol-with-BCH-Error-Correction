`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 06/12/2025 01:05:39 PM
// Design Name: 
// Module Name: Data_Link_RX
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module Data_Link_RX(
    input fc,
    input rst,
    input [9:0] rxdl_data_in,
    output reg [7:0] rxdl_data_out,
    output reg sync
    );
    
    `define R 8'h1c
    `define A 8'h7c
    `define Q 8'h9c
    `define K 8'hbc
    `define F 8'hfc
    
    parameter INIT=2'b00;
    parameter CHECK=2'b01;
    parameter DATA=2'b10;
    
    // Configuration registers
    parameter DID=8'h00;
    parameter ADJCNT=4'b1111;
    parameter BID=4'b0000;
    parameter ADJDIR=1'b0;
    parameter PHADJ=1'b0;
    parameter LID=5'b00000;
    parameter SCR=1'b0;
    parameter L=5'b10111;
    parameter F=8'b11011111;
    parameter K=5'b11001;
    parameter M=8'b11001100;
    parameter CS=2'b00;
    parameter N=5'b00000;
    parameter SUBCLASS=3'b000;
    parameter JESDV=3'b000;
    parameter S=5'b10101;
    parameter HD=1'b0;
    parameter CF=5'b00000;
    parameter FCHK=8'b00000;
    
    //reg comma;
    
    reg [8:0] rom [0:1023];
    initial 
        begin
         rom[10'b1001110100] = 9'h000;
rom[10'b0111010100] = 9'h001;
rom[10'b1011010100] = 9'h002;
rom[10'b1100011011] = 9'h003;
rom[10'b1101010100] = 9'h004;
rom[10'b1010011011] = 9'h005;
rom[10'b0110011011] = 9'h006;
rom[10'b1110001011] = 9'h007;
rom[10'b1110010100] = 9'h008;
rom[10'b1001011011] = 9'h009;
rom[10'b0101011011] = 9'h00a;
rom[10'b1101001011] = 9'h00b;
rom[10'b0011011011] = 9'h00c;
rom[10'b1011001011] = 9'h00d;
rom[10'b0111001011] = 9'h00e;
rom[10'b0101110100] = 9'h00f;
rom[10'b0110110100] = 9'h010;
rom[10'b1000111011] = 9'h011;
rom[10'b0100111011] = 9'h012;
rom[10'b1100101011] = 9'h013;
rom[10'b0010111011] = 9'h014;
rom[10'b1010101011] = 9'h015;
rom[10'b0110101011] = 9'h016;
rom[10'b1110100100] = 9'h017;
rom[10'b1100110100] = 9'h018;
rom[10'b1001101011] = 9'h019;
rom[10'b0101101011] = 9'h01a;
rom[10'b1101100100] = 9'h01b;
rom[10'b0011101011] = 9'h01c;
rom[10'b1011100100] = 9'h01d;
rom[10'b0111100100] = 9'h01e;
rom[10'b1010110100] = 9'h01f;
rom[10'b1001111001] = 9'h020;
rom[10'b0111011001] = 9'h021;
rom[10'b1011011001] = 9'h022;
rom[10'b1100011001] = 9'h023;
rom[10'b1101011001] = 9'h024;
rom[10'b1010011001] = 9'h025;
rom[10'b0110011001] = 9'h026;
rom[10'b1110001001] = 9'h027;
rom[10'b1110011001] = 9'h028;
rom[10'b1001011001] = 9'h029;
rom[10'b0101011001] = 9'h02a;
rom[10'b1101001001] = 9'h02b;
rom[10'b0011011001] = 9'h02c;
rom[10'b1011001001] = 9'h02d;
rom[10'b0111001001] = 9'h02e;
rom[10'b0101111001] = 9'h02f;
rom[10'b0110111001] = 9'h030;
rom[10'b1000111001] = 9'h031;
rom[10'b0100111001] = 9'h032;
rom[10'b1100101001] = 9'h033;
rom[10'b0010111001] = 9'h034;
rom[10'b1010101001] = 9'h035;
rom[10'b0110101001] = 9'h036;
rom[10'b1110101001] = 9'h037;
rom[10'b1100111001] = 9'h038;
rom[10'b1001101001] = 9'h039;
rom[10'b0101101001] = 9'h03a;
rom[10'b1101101001] = 9'h03b;
rom[10'b0011101001] = 9'h03c;
rom[10'b1011101001] = 9'h03d;
rom[10'b0111101001] = 9'h03e;
rom[10'b1010111001] = 9'h03f;
rom[10'b1001110101] = 9'h040;
rom[10'b0111010101] = 9'h041;
rom[10'b1011010101] = 9'h042;
rom[10'b1100010101] = 9'h043;
rom[10'b1101010101] = 9'h044;
rom[10'b1010010101] = 9'h045;
rom[10'b0110010101] = 9'h046;
rom[10'b1110000101] = 9'h047;
rom[10'b1110010101] = 9'h048;
rom[10'b1001010101] = 9'h049;
rom[10'b0101010101] = 9'h04a;
rom[10'b1101000101] = 9'h04b;
rom[10'b0011010101] = 9'h04c;
rom[10'b1011000101] = 9'h04d;
rom[10'b0111000101] = 9'h04e;
rom[10'b0101110101] = 9'h04f;
rom[10'b0110110101] = 9'h050;
rom[10'b1000110101] = 9'h051;
rom[10'b0100110101] = 9'h052;
rom[10'b1100100101] = 9'h053;
rom[10'b0010110101] = 9'h054;
rom[10'b1010100101] = 9'h055;
rom[10'b0110100101] = 9'h056;
rom[10'b1110100101] = 9'h057;
rom[10'b1100110101] = 9'h058;
rom[10'b1001100101] = 9'h059;
rom[10'b0101100101] = 9'h05a;
rom[10'b1101100101] = 9'h05b;
rom[10'b0011100101] = 9'h05c;
rom[10'b1011100101] = 9'h05d;
rom[10'b0111100101] = 9'h05e;
rom[10'b1010110101] = 9'h05f;
rom[10'b1001110011] = 9'h060;
rom[10'b0111010011] = 9'h061;
rom[10'b1011010011] = 9'h062;
rom[10'b1100011100] = 9'h063;
rom[10'b1101010011] = 9'h064;
rom[10'b1010011100] = 9'h065;
rom[10'b0110011100] = 9'h066;
rom[10'b1110001100] = 9'h067;
rom[10'b1110010011] = 9'h068;
rom[10'b1001011100] = 9'h069;
rom[10'b0101011100] = 9'h06a;
rom[10'b1101001100] = 9'h06b;
rom[10'b0011011100] = 9'h06c;
rom[10'b1011001100] = 9'h06d;
rom[10'b0111001100] = 9'h06e;
rom[10'b0101110011] = 9'h06f;
rom[10'b0110110011] = 9'h070;
rom[10'b1000111100] = 9'h071;
rom[10'b0100111100] = 9'h072;
rom[10'b1100101100] = 9'h073;
rom[10'b0010111100] = 9'h074;
rom[10'b1010101100] = 9'h075;
rom[10'b0110101100] = 9'h076;
rom[10'b1110100011] = 9'h077;
rom[10'b1100110011] = 9'h078;
rom[10'b1001101100] = 9'h079;
rom[10'b0101101100] = 9'h07a;
rom[10'b1101100011] = 9'h07b;
rom[10'b0011101100] = 9'h07c;
rom[10'b1011100011] = 9'h07d;
rom[10'b0111100011] = 9'h07e;
rom[10'b1010110011] = 9'h07f;
rom[10'b1001110010] = 9'h080;
rom[10'b0111010010] = 9'h081;
rom[10'b1011010010] = 9'h082;
rom[10'b1100011101] = 9'h083;
rom[10'b1101010010] = 9'h084;
rom[10'b1010011101] = 9'h085;
rom[10'b0110011101] = 9'h086;
rom[10'b1110001101] = 9'h087;
rom[10'b1110010010] = 9'h088;
rom[10'b1001011101] = 9'h089;
rom[10'b0101011101] = 9'h08a;
rom[10'b1101001101] = 9'h08b;
rom[10'b0011011101] = 9'h08c;
rom[10'b1011001101] = 9'h08d;
rom[10'b0111001101] = 9'h08e;
rom[10'b0101110010] = 9'h08f;
rom[10'b0110110010] = 9'h090;
rom[10'b1000111101] = 9'h091;
rom[10'b0100111101] = 9'h092;
rom[10'b1100101101] = 9'h093;
rom[10'b0010111101] = 9'h094;
rom[10'b1010101101] = 9'h095;
rom[10'b0110101101] = 9'h096;
rom[10'b1110100010] = 9'h097;
rom[10'b1100110010] = 9'h098;
rom[10'b1001101101] = 9'h099;
rom[10'b0101101101] = 9'h09a;
rom[10'b1101100010] = 9'h09b;
rom[10'b0011101101] = 9'h09c;
rom[10'b1011100010] = 9'h09d;
rom[10'b0111100010] = 9'h09e;
rom[10'b1010110010] = 9'h09f;
rom[10'b1001111010] = 9'h0a0;
rom[10'b0111011010] = 9'h0a1;
rom[10'b1011011010] = 9'h0a2;
rom[10'b1100011010] = 9'h0a3;
rom[10'b1101011010] = 9'h0a4;
rom[10'b1010011010] = 9'h0a5;
rom[10'b0110011010] = 9'h0a6;
rom[10'b1110001010] = 9'h0a7;
rom[10'b1110011010] = 9'h0a8;
rom[10'b1001011010] = 9'h0a9;
rom[10'b0101011010] = 9'h0aa;
rom[10'b1101001010] = 9'h0ab;
rom[10'b0011011010] = 9'h0ac;
rom[10'b1011001010] = 9'h0ad;
rom[10'b0111001010] = 9'h0ae;
rom[10'b0101111010] = 9'h0af;
rom[10'b0110111010] = 9'h0b0;
rom[10'b1000111010] = 9'h0b1;
rom[10'b0100111010] = 9'h0b2;
rom[10'b1100101010] = 9'h0b3;
rom[10'b0010111010] = 9'h0b4;
rom[10'b1010101010] = 9'h0b5;
rom[10'b0110101010] = 9'h0b6;
rom[10'b1110101010] = 9'h0b7;
rom[10'b1100111010] = 9'h0b8;
rom[10'b1001101010] = 9'h0b9;
rom[10'b0101101010] = 9'h0ba;
rom[10'b1101101010] = 9'h0bb;
rom[10'b0011101010] = 9'h0bc;
rom[10'b1011101010] = 9'h0bd;
rom[10'b0111101010] = 9'h0be;
rom[10'b1010111010] = 9'h0bf;
rom[10'b1001110110] = 9'h0c0;
rom[10'b0111010110] = 9'h0c1;
rom[10'b1011010110] = 9'h0c2;
rom[10'b1100010110] = 9'h0c3;
rom[10'b1101010110] = 9'h0c4;
rom[10'b1010010110] = 9'h0c5;
rom[10'b0110010110] = 9'h0c6;
rom[10'b1110000110] = 9'h0c7;
rom[10'b1110010110] = 9'h0c8;
rom[10'b1001010110] = 9'h0c9;
rom[10'b0101010110] = 9'h0ca;
rom[10'b1101000110] = 9'h0cb;
rom[10'b0011010110] = 9'h0cc;
rom[10'b1011000110] = 9'h0cd;
rom[10'b0111000110] = 9'h0ce;
rom[10'b0101110110] = 9'h0cf;
rom[10'b0110110110] = 9'h0d0;
rom[10'b1000110110] = 9'h0d1;
rom[10'b0100110110] = 9'h0d2;
rom[10'b1100100110] = 9'h0d3;
rom[10'b0010110110] = 9'h0d4;
rom[10'b1010100110] = 9'h0d5;
rom[10'b0110100110] = 9'h0d6;
rom[10'b1110100110] = 9'h0d7;
rom[10'b1100110110] = 9'h0d8;
rom[10'b1001100110] = 9'h0d9;
rom[10'b0101100110] = 9'h0da;
rom[10'b1101100110] = 9'h0db;
rom[10'b0011100110] = 9'h0dc;
rom[10'b1011100110] = 9'h0dd;
rom[10'b0111100110] = 9'h0de;
rom[10'b1010110110] = 9'h0df;
rom[10'b1001110001] = 9'h0e0;
rom[10'b0111010001] = 9'h0e1;
rom[10'b1011010001] = 9'h0e2;
rom[10'b1100011110] = 9'h0e3;
rom[10'b1101010001] = 9'h0e4;
rom[10'b1010011110] = 9'h0e5;
rom[10'b0110011110] = 9'h0e6;
rom[10'b1110001110] = 9'h0e7;
rom[10'b1110010001] = 9'h0e8;
rom[10'b1001011110] = 9'h0e9;
rom[10'b0101011110] = 9'h0ea;
rom[10'b1101001110] = 9'h0eb;
rom[10'b0011011110] = 9'h0ec;
rom[10'b1011001110] = 9'h0ed;
rom[10'b0111001110] = 9'h0ee;
rom[10'b0101110001] = 9'h0ef;
rom[10'b0110110001] = 9'h0f0;
rom[10'b1000110111] = 9'h0f1;
rom[10'b0100110111] = 9'h0f2;
rom[10'b1100101110] = 9'h0f3;
rom[10'b0010110111] = 9'h0f4;
rom[10'b1010101110] = 9'h0f5;
rom[10'b0110101110] = 9'h0f6;
rom[10'b1110100001] = 9'h0f7;
rom[10'b1100110001] = 9'h0f8;
rom[10'b1001101110] = 9'h0f9;
rom[10'b0101101110] = 9'h0fa;
rom[10'b1101100001] = 9'h0fb;
rom[10'b0011101110] = 9'h0fc;
rom[10'b1011100001] = 9'h0fd;
rom[10'b0111100001] = 9'h0fe;
rom[10'b1010110001] = 9'h0ff;
rom[10'b0000000000] = 9'h100;
rom[10'b0000000000] = 9'h101;
rom[10'b0000000000] = 9'h102;
rom[10'b0000000000] = 9'h103;
rom[10'b0000000000] = 9'h104;
rom[10'b0000000000] = 9'h105;
rom[10'b0000000000] = 9'h106;
rom[10'b0000000000] = 9'h107;
rom[10'b0000000000] = 9'h108;
rom[10'b0000000000] = 9'h109;
rom[10'b0000000000] = 9'h10a;
rom[10'b0000000000] = 9'h10b;
rom[10'b0000000000] = 9'h10c;
rom[10'b0000000000] = 9'h10d;
rom[10'b0000000000] = 9'h10e;
rom[10'b0000000000] = 9'h10f;
rom[10'b0000000000] = 9'h110;
rom[10'b0000000000] = 9'h111;
rom[10'b0000000000] = 9'h112;
rom[10'b0000000000] = 9'h113;
rom[10'b0000000000] = 9'h114;
rom[10'b0000000000] = 9'h115;
rom[10'b0000000000] = 9'h116;
rom[10'b0000000000] = 9'h117;
rom[10'b0000000000] = 9'h118;
rom[10'b0000000000] = 9'h119;
rom[10'b0000000000] = 9'h11a;
rom[10'b0000000000] = 9'h11b;
rom[10'b0011110101] = 9'h11c;
rom[10'b0000000000] = 9'h11d;
rom[10'b0000000000] = 9'h11e;
rom[10'b0000000000] = 9'h11f;
rom[10'b0000000000] = 9'h120;
rom[10'b0000000000] = 9'h121;
rom[10'b0000000000] = 9'h122;
rom[10'b0000000000] = 9'h123;
rom[10'b0000000000] = 9'h124;
rom[10'b0000000000] = 9'h125;
rom[10'b0000000000] = 9'h126;
rom[10'b0000000000] = 9'h127;
rom[10'b0000000000] = 9'h128;
rom[10'b0000000000] = 9'h129;
rom[10'b0000000000] = 9'h12a;
rom[10'b0000000000] = 9'h12b;
rom[10'b0000000000] = 9'h12c;
rom[10'b0000000000] = 9'h12d;
rom[10'b0000000000] = 9'h12e;
rom[10'b0000000000] = 9'h12f;
rom[10'b0000000000] = 9'h130;
rom[10'b0000000000] = 9'h131;
rom[10'b0000000000] = 9'h132;
rom[10'b0000000000] = 9'h133;
rom[10'b0000000000] = 9'h134;
rom[10'b0000000000] = 9'h135;
rom[10'b0000000000] = 9'h136;
rom[10'b0000000000] = 9'h137;
rom[10'b0000000000] = 9'h138;
rom[10'b0000000000] = 9'h139;
rom[10'b0000000000] = 9'h13a;
rom[10'b0000000000] = 9'h13b;
rom[10'b0011111001] = 9'h13c;
rom[10'b0000000000] = 9'h13d;
rom[10'b0000000000] = 9'h13e;
rom[10'b0000000000] = 9'h13f;
rom[10'b0000000000] = 9'h140;
rom[10'b0000000000] = 9'h141;
rom[10'b0000000000] = 9'h142;
rom[10'b0000000000] = 9'h143;
rom[10'b0000000000] = 9'h144;
rom[10'b0000000000] = 9'h145;
rom[10'b0000000000] = 9'h146;
rom[10'b0000000000] = 9'h147;
rom[10'b0000000000] = 9'h148;
rom[10'b0000000000] = 9'h149;
rom[10'b0000000000] = 9'h14a;
rom[10'b0000000000] = 9'h14b;
rom[10'b0000000000] = 9'h14c;
rom[10'b0000000000] = 9'h14d;
rom[10'b0000000000] = 9'h14e;
rom[10'b0000000000] = 9'h14f;
rom[10'b0000000000] = 9'h150;
rom[10'b0000000000] = 9'h151;
rom[10'b0000000000] = 9'h152;
rom[10'b0000000000] = 9'h153;
rom[10'b0000000000] = 9'h154;
rom[10'b0000000000] = 9'h155;
rom[10'b0000000000] = 9'h156;
rom[10'b0000000000] = 9'h157;
rom[10'b0000000000] = 9'h158;
rom[10'b0000000000] = 9'h159;
rom[10'b0000000000] = 9'h15a;
rom[10'b0000000000] = 9'h15b;
rom[10'b0011110101] = 9'h15c;
rom[10'b0000000000] = 9'h15d;
rom[10'b0000000000] = 9'h15e;
rom[10'b0000000000] = 9'h15f;
rom[10'b0000000000] = 9'h160;
rom[10'b0000000000] = 9'h161;
rom[10'b0000000000] = 9'h162;
rom[10'b0000000000] = 9'h163;
rom[10'b0000000000] = 9'h164;
rom[10'b0000000000] = 9'h165;
rom[10'b0000000000] = 9'h166;
rom[10'b0000000000] = 9'h167;
rom[10'b0000000000] = 9'h168;
rom[10'b0000000000] = 9'h169;
rom[10'b0000000000] = 9'h16a;
rom[10'b0000000000] = 9'h16b;
rom[10'b0000000000] = 9'h16c;
rom[10'b0000000000] = 9'h16d;
rom[10'b0000000000] = 9'h16e;
rom[10'b0000000000] = 9'h16f;
rom[10'b0000000000] = 9'h170;
rom[10'b0000000000] = 9'h171;
rom[10'b0000000000] = 9'h172;
rom[10'b0000000000] = 9'h173;
rom[10'b0000000000] = 9'h174;
rom[10'b0000000000] = 9'h175;
rom[10'b0000000000] = 9'h176;
rom[10'b0000000000] = 9'h177;
rom[10'b0000000000] = 9'h178;
rom[10'b0000000000] = 9'h179;
rom[10'b0000000000] = 9'h17a;
rom[10'b0000000000] = 9'h17b;
rom[10'b0011110011] = 9'h17c;
rom[10'b0000000000] = 9'h17d;
rom[10'b0000000000] = 9'h17e;
rom[10'b0000000000] = 9'h17f;
rom[10'b0000000000] = 9'h180;
rom[10'b0000000000] = 9'h181;
rom[10'b0000000000] = 9'h182;
rom[10'b0000000000] = 9'h183;
rom[10'b0000000000] = 9'h184;
rom[10'b0000000000] = 9'h185;
rom[10'b0000000000] = 9'h186;
rom[10'b0000000000] = 9'h187;
rom[10'b0000000000] = 9'h188;
rom[10'b0000000000] = 9'h189;
rom[10'b0000000000] = 9'h18a;
rom[10'b0000000000] = 9'h18b;
rom[10'b0000000000] = 9'h18c;
rom[10'b0000000000] = 9'h18d;
rom[10'b0000000000] = 9'h18e;
rom[10'b0000000000] = 9'h18f;
rom[10'b0000000000] = 9'h190;
rom[10'b0000000000] = 9'h191;
rom[10'b0000000000] = 9'h192;
rom[10'b0000000000] = 9'h193;
rom[10'b0000000000] = 9'h194;
rom[10'b0000000000] = 9'h195;
rom[10'b0000000000] = 9'h196;
rom[10'b0000000000] = 9'h197;
rom[10'b0000000000] = 9'h198;
rom[10'b0000000000] = 9'h199;
rom[10'b0000000000] = 9'h19a;
rom[10'b0000000000] = 9'h19b;
rom[10'b0011110010] = 9'h19c;
rom[10'b0000000000] = 9'h19d;
rom[10'b0000000000] = 9'h19e;
rom[10'b0000000000] = 9'h19f;
rom[10'b0000000000] = 9'h1a0;
rom[10'b0000000000] = 9'h1a1;
rom[10'b0000000000] = 9'h1a2;
rom[10'b0000000000] = 9'h1a3;
rom[10'b0000000000] = 9'h1a4;
rom[10'b0000000000] = 9'h1a5;
rom[10'b0000000000] = 9'h1a6;
rom[10'b0000000000] = 9'h1a7;
rom[10'b0000000000] = 9'h1a8;
rom[10'b0000000000] = 9'h1a9;
rom[10'b0000000000] = 9'h1aa;
rom[10'b0000000000] = 9'h1ab;
rom[10'b0000000000] = 9'h1ac;
rom[10'b0000000000] = 9'h1ad;
rom[10'b0000000000] = 9'h1ae;
rom[10'b0000000000] = 9'h1af;
rom[10'b0000000000] = 9'h1b0;
rom[10'b0000000000] = 9'h1b1;
rom[10'b0000000000] = 9'h1b2;
rom[10'b0000000000] = 9'h1b3;
rom[10'b0000000000] = 9'h1b4;
rom[10'b0000000000] = 9'h1b5;
rom[10'b0000000000] = 9'h1b6;
rom[10'b0000000000] = 9'h1b7;
rom[10'b0000000000] = 9'h1b8;
rom[10'b0000000000] = 9'h1b9;
rom[10'b0000000000] = 9'h1ba;
rom[10'b0000000000] = 9'h1bb;
rom[10'b0011111010] = 9'h1bc;
rom[10'b0000000000] = 9'h1bd;
rom[10'b0000000000] = 9'h1be;
rom[10'b0000000000] = 9'h1bf;
rom[10'b0000000000] = 9'h1c0;
rom[10'b0000000000] = 9'h1c1;
rom[10'b0000000000] = 9'h1c2;
rom[10'b0000000000] = 9'h1c3;
rom[10'b0000000000] = 9'h1c4;
rom[10'b0000000000] = 9'h1c5;
rom[10'b0000000000] = 9'h1c6;
rom[10'b0000000000] = 9'h1c7;
rom[10'b0000000000] = 9'h1c8;
rom[10'b0000000000] = 9'h1c9;
rom[10'b0000000000] = 9'h1ca;
rom[10'b0000000000] = 9'h1cb;
rom[10'b0000000000] = 9'h1cc;
rom[10'b0000000000] = 9'h1cd;
rom[10'b0000000000] = 9'h1ce;
rom[10'b0000000000] = 9'h1cf;
rom[10'b0000000000] = 9'h1d0;
rom[10'b0000000000] = 9'h1d1;
rom[10'b0000000000] = 9'h1d2;
rom[10'b0000000000] = 9'h1d3;
rom[10'b0000000000] = 9'h1d4;
rom[10'b0000000000] = 9'h1d5;
rom[10'b0000000000] = 9'h1d6;
rom[10'b0000000000] = 9'h1d7;
rom[10'b0000000000] = 9'h1d8;
rom[10'b0000000000] = 9'h1d9;
rom[10'b0000000000] = 9'h1da;
rom[10'b0000000000] = 9'h1db;
rom[10'b0011110110] = 9'h1dc;
rom[10'b0000000000] = 9'h1dd;
rom[10'b0000000000] = 9'h1de;
rom[10'b0000000000] = 9'h1df;
rom[10'b0000000000] = 9'h1e0;
rom[10'b0000000000] = 9'h1e1;
rom[10'b0000000000] = 9'h1e2;
rom[10'b0000000000] = 9'h1e3;
rom[10'b0000000000] = 9'h1e4;
rom[10'b0000000000] = 9'h1e5;
rom[10'b0000000000] = 9'h1e6;
rom[10'b0000000000] = 9'h1e7;
rom[10'b0000000000] = 9'h1e8;
rom[10'b0000000000] = 9'h1e9;
rom[10'b0000000000] = 9'h1ea;
rom[10'b0000000000] = 9'h1eb;
rom[10'b0000000000] = 9'h1ec;
rom[10'b0000000000] = 9'h1ed;
rom[10'b0000000000] = 9'h1ee;
rom[10'b0000000000] = 9'h1ef;
rom[10'b0000000000] = 9'h1f0;
rom[10'b0000000000] = 9'h1f1;
rom[10'b0000000000] = 9'h1f2;
rom[10'b0000000000] = 9'h1f3;
rom[10'b0000000000] = 9'h1f4;
rom[10'b0000000000] = 9'h1f5;
rom[10'b0000000000] = 9'h1f6;
rom[10'b0000000000] = 9'h1f7;
rom[10'b0000000000] = 9'h1f8;
rom[10'b0000000000] = 9'h1f9;
rom[10'b0000000000] = 9'h1fa;
rom[10'b0000000000] = 9'h1fb;
rom[10'b0011111000] = 9'h1fc;
rom[10'b0000000000] = 9'h1fd;
rom[10'b0000000000] = 9'h1fe;
rom[10'b0000000000] = 9'h1ff;
end    

    


   
    reg rx_valid;
    reg rflag,kflag,k4flag,k8flag,qflag,fflag,aflag,cas;
    reg [1:0] state,next_state,octcnt;
    reg [7:0] kcnt;
    reg [2:0] ila_frame;
    reg [5:0] oct;
    reg [4:0] octstate;
    reg oct1,ind,indicator,nextflag,ila_done;
    reg [7:0] octet2,octet4,buff;
    reg [7:0] data_buff,data_buff1;
    reg [5:0] base;
    reg [2:0] main;
    
    always@(*) begin
        case(state)
            INIT: next_state=(k4flag) ? CHECK : INIT;
            CHECK:  next_state=( k8flag && rx_valid) ? DATA : CHECK;
            DATA: next_state=rx_valid ? DATA: INIT;
            default : next_state=INIT;
        endcase
    end
    
    //always@(posedge lmfc) begin
    //    state=next_state;
    //end
    
    always@(posedge fc or negedge rst) begin
        if(!rst) begin
            sync<=1'b0;
            state<=INIT;
            oct<=6'h00;
            octstate<=5'd0;
            ila_frame<=3'b00;
            kcnt<=8'b00;
            rx_valid<=1'b0;
            rflag<=1'b0;
            kflag<=1'b0;
            k4flag<=1'b0;
            k8flag<=1'b0;
            qflag<=1'b0;
            fflag<=1'b0;
            aflag<=1'b0;
            ila_done<=1'b0;
            oct1<=1'b0;
            octcnt<=2'b0;
            ind<=1'b0;
            nextflag<=0;
            indicator<=0;
            //cas<=1'b0;
        end else begin
        octstate<=octstate+kflag;
        {cas,data_buff}<=rom[rxdl_data_in];
        data_buff1<=data_buff;
        //cas<=(rxdl_data_in[9:4]==6'b001111);
        base<=data_buff[4:0];
        main<=data_buff[7:5];
        if(octstate == 31) state=next_state;
            case(state)
                INIT: begin
                        sync<=0;
                        if(data_buff==`K && cas) begin 
                        kcnt<=kcnt+1;
                        kflag<=1'b1;
                        rx_valid<=1;
                        end
                        if(kcnt == 8'd4) k4flag<=1'b1;
                      end
                CHECK:begin
                        if(data_buff==`K && cas) begin 
                        kcnt<=kcnt+1;
                        rx_valid<=1;
                        end
                        if(kcnt==8'd8) begin sync<=1'b1;k8flag<=1'b1; end
                      end
                         
                DATA:  begin 
                        if(oct1==1 && (data_buff != `F) && !cas && ila_done) octet2<=data_buff;
                        if(octstate == 5'h1e && (data_buff != `A) && !cas && ila_done) octet4<=data_buff;
                        if(ila_frame ==4 && aflag==1) ila_frame<=ila_frame+1;
                        buff<=data_buff;
                        if(data_buff[4:0] ==5'b11100 && cas) begin
                            case(data_buff[7:5])
                                3'b101: ;//K
                                3'b000: rflag<=1'b1;//R
                                3'b011: aflag<=1'b1;//A
                                3'b100: qflag<=1'b1;//Q
                                3'b111: fflag<=1'b1;//F
                            endcase
                        end
                        oct1<=oct1+1;
                        if(rflag ==1) begin
                            rflag<=1'b0;
                        end else
                        if(qflag ==1) begin
                            oct<=oct+1;
                            case(oct)
                                    5'd1: rx_valid=(DID==data_buff);
                                    5'd2: rx_valid=({ADJCNT,BID}==data_buff);
                                    5'd3: rx_valid=({ADJDIR,PHADJ,LID}==data_buff);
                                    5'd4: rx_valid=({SCR,L}==data_buff);
                                    5'd5: rx_valid=(F==data_buff);
                                    5'd6: rx_valid=(K==data_buff);
                                    5'd7: rx_valid=(M==data_buff);
                                    5'd8: rx_valid=({CS,N}==data_buff);
                                    5'd9: rx_valid=({SUBCLASS,N}==data_buff);
                                    5'd10: rx_valid=({JESDV,S}==data_buff);
                                    5'd11: rx_valid=({HD,CF}==data_buff);
                                    5'd14: begin 
                                            rx_valid=(FCHK==data_buff);
                                            qflag<=1'b0;
                                            end
                            endcase
                        end else
                        if(aflag ==1) begin
                            ila_frame<=ila_frame+1;
                            if(ila_frame == 3) ila_done<=1'b1;
                            if(ila_done) begin
                            rxdl_data_out<=(octet4);
                            indicator<=~indicator;
                            end
                            aflag<=1'b0;
                        end else
                        if(fflag ==1) begin
                            if(ila_done) begin
                            rxdl_data_out<=(octet2);
                            ind<=~ind;
                            end
                            fflag<=1'b0;
                        end else if(ila_done)   
                            rxdl_data_out<=(data_buff1);
                       end   
            endcase
        end
    end
    
endmodule
